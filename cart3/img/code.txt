App.js


var storeApp = angular.module('AngularStore', []).
  config(['$routeProvider', function($routeProvider) {
  $routeProvider.
      when('/store', {
        templateUrl: 'partials/store.htm',
        controller: storeController 
      }).
      when('/products/:productId', {
        templateUrl: 'partials/product.htm',
        controller: storeController
      }).
      when('/cart', {
        templateUrl: 'partials/shoppingCart.htm',
        controller: storeController
      }).
      otherwise({
        redirectTo: '/store'
      });
}]);


storeApp.factory("DataService", function () {
    var myStore = new store();
    var myCart = new shoppingCart("AngularStore");

   myCart.addCheckoutParameters("PayPal", "madhuriunde123@gmail.com");
    return {
        store: myStore,
        cart: myCart
    };
});




Product.js

function product(id, name, description, price, cal) {
    this.id = id; 
    this.name = name;
    this.description = description;
    this.price = price;
    this.cal = cal;
}


shoppingCart.js


function shoppingCart(cartName) {
    this.cartName = cartName;
    this.clearCart = false;
    this.checkoutParameters = {};
    this.items = [];

    
    this.loadItems();
    var self = this;
    $(window).unload(function () {
        if (self.clearCart) {
            self.clearItems();
        }
        self.saveItems();
        self.clearCart = false;
    });

    
    $(window).on('storage', function (e) {
        if (e.originalEvent.key == self.cartName + '_items' && !self.savingItems) {
            self.loadItems();
        }
    });
}

shoppingCart.prototype.loadItems = function () {
    this.items.splice(0, this.items.length);

    var items = localStorage != null ? localStorage[this.cartName + "_items"] : null;
    if (items != null && JSON != null) {
        try {
            var items = JSON.parse(items);
            for (var i = 0; i < items.length; i++) {
                var item = items[i];
                if (item.id != null && item.name != null && item.price != null && item.quantity != null) {
                    item = new cartItem(item.id, item.name, item.price, item.quantity);
                    this.items.push(item);
                }
            }
        }
        catch (err) {
        
        }
    }
    
    if (this.itemsChanged) {
        this.itemsChanged();
    }
}

shoppingCart.prototype.saveItems = function () {
    if (localStorage != null && JSON != null) {
        localStorage[this.cartName + "_items"] = JSON.stringify(this.items);
    }
}

shoppingCart.prototype.addItem = function (id, name, price, quantity) {
    quantity = this.toNumber(quantity);
    if (quantity != 0) {
        var found = false;
        for (var i = 0; i < this.items.length && !found; i++) {
            var item = this.items[i];
            if (item.id == id) {
                found = true;
                item.quantity = this.toNumber(item.quantity + quantity);
                if (item.quantity <= 0) {
                    this.items.splice(i, 1);
                }
            }
        }
        if (!found) {
            var item = new cartItem(id, name, price, quantity);
            this.items.push(item);
        }

        this.saveItems();
    }
}


shoppingCart.prototype.getTotalPrice = function (id) {
    var total = 0;
    for (var i = 0; i < this.items.length; i++) {
        var item = this.items[i];
        if (id == null || item.id == id) {
            total += this.toNumber(item.quantity * item.price);
        }
    }
    return total;
}


shoppingCart.prototype.getTotalCount = function (id) {
    var count = 0;
    for (var i = 0; i < this.items.length; i++) {
        var item = this.items[i];
        if (id == null || item.id == id) {
            count += this.toNumber(item.quantity);
        }
    }
    return count;
}


shoppingCart.prototype.clearItems = function () {
    this.items = [];
    this.saveItems();
}


shoppingCart.prototype.addCheckoutParameters = function (serviceName, merchantID, options) {

    if (serviceName != "PayPal") {
        throw "serviceName must be 'PayPal'";
    }
    if (merchantID == null) {
        throw "A merchantID is required in order to checkout.";
    }

    this.checkoutParameters[serviceName] = new checkoutParameters(serviceName, merchantID, options);
}

shoppingCart.prototype.checkout = function (serviceName, clearCart) {
    if (serviceName == null) {
        var p = this.checkoutParameters[Object.keys(this.checkoutParameters)[0]];
        serviceName = p.serviceName;
    }

    if (serviceName == null) {
        throw "Use the 'addCheckoutParameters' method to define at least one checkout service.";
    }

    var parms = this.checkoutParameters[serviceName];
    if (parms == null) {
        throw "Cannot get checkout parameters for '" + serviceName + "'.";
    }
    switch (parms.serviceName) {
        case "PayPal":
            this.checkoutPayPal(parms, clearCart);
            break;
    
        default:
            throw "Unknown checkout service: " + parms.serviceName;
    }
}


shoppingCart.prototype.checkoutPayPal = function (parms, clearCart) {

    var data = {
        cmd: "_cart",
        business: parms.merchantID,
        upload: "1",
        rm: "2",
        charset: "utf-8"
    };


    for (var i = 0; i < this.items.length; i++) {
        var item = this.items[i];
        var ctr = i + 1;
        data["item_number_" + ctr] = item.id;
        data["item_name_" + ctr] = item.name;
        data["quantity_" + ctr] = item.quantity;
        data["amount_" + ctr] = item.price.toFixed(2);
    }

    
    var form = $('<form/></form>');
    form.attr("action", "https://www.paypal.com/cgi-bin/webscr");
    form.attr("method", "POST");
    form.attr("style", "display:none;");
    this.addFormFields(form, data);
    this.addFormFields(form, parms.options);
    $("body").append(form);

    this.clearCart = clearCart == null || clearCart;
    form.submit();
    form.remove();
}

shoppingCart.prototype.addFormFields = function (form, data) {
    if (data != null) {
        $.each(data, function (name, value) {
            if (value != null) {
                var input = $("<input></input>").attr("type", "hidden").attr("name", name).val(value);
                form.append(input);
            }
        });
    }
}
shoppingCart.prototype.toNumber = function (value) {
    value = value * 1;
    return isNaN(value) ? 0 : value;
}

function checkoutParameters(serviceName, merchantID, options) {
    this.serviceName = serviceName;
    this.merchantID = merchantID;
    this.options = options;
}

function cartItem(id, name, price, quantity) {
    this.id = id;
    this.name = name;
    this.price = price * 1;
    this.quantity = quantity * 1;
}

store.js


function store() {
    this.products = [
        new product("red6", "RedMi6", "Red mi 6 Pro", 10000, 3),
        new product("a2", "MiA2", "Mi A2", 9000, 7),
        new product("v11", "Vivo11", "Vivo 11.", 8000, 4),
        new product("a2", "Nokia105", "Nokia 105 feature phone.", 3000, 2),

    ];
    
}
store.prototype.getProduct = function (id) {
    for (var i = 0; i < this.products.length; i++) {
        if (this.products[i].id == id)
            return this.products[i];
    }
    return null;
}

Product.html

<p class="text-info">
    <img ng-src="img/products/{{product.id}}.jpg" alt="{{product.name}}"/>
    {{product.name}}: {{product.description}}<br />
</p>
<div>
    <div>
        <div>
            <table>
                <tr>
                    <td>
                        <a href="default.htm#/cart" title="go to shopping cart" ng-disabled="cart.getTotalCount() < 1">
                            <i />
                            <b>{{cart.getTotalCount()}}</b> items, <b>{{cart.getTotalPrice() | currency}}</b>
                            <span ng-show="cart.getTotalCount(product.id) > 0"><br />This item added to cart</span>
                        </a>
                    </td>
                </tr>
                <tr>
                    <td ><b>Warrenty</b></td>
                    <td ><h2>{{product.cal}}</h2></td>
                    <td />
                </tr>
            </table>
        </div>

        <div>
            <button 
                ng-click="cart.addItem(product.id, product.name, product.price, 1)">
                <i/> Add to cart
            </button>
            <button 
                ng-click="cart.addItem(product.id, product.name, product.price, -10000)"
                ng-disabled="cart.getTotalCount(product.id) < 1">
                <i/> Remove from cart
            </button>
            <button
                onclick="window.location.href=''">
                <i/> Continue shopping
            </button>
        </div>
    </div>
</div>


shoppingCart.html
<p class="text-info">
    Thanks for shopping at the Madhu's Store.<br />
    
</p>

<div>
    <div>
        <div>
            <table>
                <tr>
                    <td><b>Item</b></td>
                    <td><b>Quantity</b></td>
                    <td><b>Price</b></td>
                    <td />
                </tr>

    
                <tr ng-hide="cart.getTotalCount() > 0" >
                    <td>
                        Sorry.. Cart is empty.
                    </td>
                </tr>

            
                <tr ng-repeat="item in cart.items | orderBy:'name'">
                    <td>{{item.name}}</td>
                    <td>
                      <div>
                    
                        <input
                            ng-model="item.quantity" 
                            ng-change="cart.saveItems()" />
                        <button type="button" 
                            ng-disabled="item.quantity >= 1000"
                            ng-click="cart.addItem(item.id, item.name, item.price, +1)">+</button>
                        <button 
                            type="button" 
                            ng-disabled="item.quantity <= 1"
                            ng-click="cart.addItem(item.id, item.name, item.price, -1)">-</button>
                      </div>
                    </td>
                    <td >{{item.price * item.quantity | currency}}</td>
                    <td  title="remove from cart">
                        <a href="" ng-click="cart.addItem(item.id, item.name, item.price, -10000000)" >
                            <i class="icon-remove" />
                        </a>
                    </td>
                </tr>

            
                <tr>
                    <td><b>Total</b></td>
                    <td><b>{{cart.getTotalCount()}}</b></td>
                    <td><b>{{cart.getTotalPrice() | currency}}</b></td>
                    <td />
                </tr>
            </table>
        </div>

        <div>
            <p>
                <button 
        
                    onclick="window.location.href='default.htm'">
                    <i/> back to store
                </button>
                <button 
                    ng-click="cart.clearItems()" 
                    ng-disabled="cart.getTotalCount() < 1" >
                    <i/> clear cart
                </button>
            </p>

            <br /><br />

            <p>
                <button
                    ng-click="cart.checkout('PayPal')"
                    ng-disabled="cart.getTotalCount() < 1">
                    <i/> Check out using PayPal
                </button>
                
            </p>

            <br /><br />

            <p>
                <button 
                    ng-click="cart.checkout('PayPal')"
                    ng-disabled="cart.getTotalCount() < 1" >
                    <img src="https://www.paypal.com/en_US/i/btn/btn_xpressCheckout.gif" alt="checkout PayPal"/>
                </button>    
                
            </p>
        </div>
    </div>
</div>

Store.html
<p>
    Welcome to the DMart <br />
    
</p>

<p>
    Search: <input ng-model="search">
</p>

<table>
    <tr>
        <td class="text-center">
            <a href="default.htm#/cart" title="go to shopping cart" ng-disabled="cart.getTotalCount() < 1">
                <i/>
                <span class="glyphicon glyphicon-shopping-cart"></span>    
                <b>{{cart.getTotalCount()}}</b> items, <b>{{cart.getTotalPrice() | currency}}</b>
            </a>
        </td>
    </tr>
    <tr ng-repeat="product in store.products | orderBy:'name' | filter:search" >
        <td><img ng-src="img/products/{{product.id}}.jpg" alt="{{product.name}}" /></td>
        <td>
            <a href="#/products/{{product.id}}"><b>{{product.name}}</b></a>
            {{product.description}}
        </td>
        <td>
            {{product.price | currency}}
        </td>
        <td>
            <a href="" ng-click="cart.addItem(product.id, product.name, product.price, 1)">
                Add to cart
            </a>
        </td>
    </tr>
    
</table>